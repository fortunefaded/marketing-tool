#!/usr/bin/env sh

# Pre-commitフック：コミット前に軽量なチェックを実行

# 環境変数でスキップ可能
if [ "$SKIP_PRECOMMIT" = "1" ] || [ "$SKIP_HOOKS" = "1" ]; then
    echo "⏭️  Pre-commitフックをスキップしました"
    exit 0
fi

echo "🔍 Pre-commit フックを実行しています..."

# ステージングされたファイルのみをチェック
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx)$' || true)

if [ -n "$STAGED_FILES" ]; then
    echo "📘 ステージされたTypeScriptファイルをチェック中..."
    
    # アーカイブされたファイルとテストファイルを除外
    FILTERED_FILES=$(echo "$STAGED_FILES" | grep -v -E "(_archived|__tests__|\.test\.|\.spec\.|convex/_generated|src_backup_)" || true)
    
    if [ -n "$FILTERED_FILES" ]; then
        # クリティカルなファイル（コアロジック）のみ厳密にチェック
        CRITICAL_FILES=$(echo "$FILTERED_FILES" | grep -E "(features/meta-api/core/|services/core/|hooks/core/)" || true)
        
        if [ -n "$CRITICAL_FILES" ]; then
            echo "  ⚡ クリティカルファイルの型チェック..."
            npx tsc --noEmit --project tsconfig.precommit.json --skipLibCheck $CRITICAL_FILES 2>&1 | head -20
            
            if [ ${PIPESTATUS[0]} -ne 0 ]; then
                echo "❌ クリティカルファイルにTypeScriptエラーがあります"
                echo "💡 修正が必要です: $CRITICAL_FILES"
                echo "🔧 回避方法: SKIP_PRECOMMIT=1 git commit"
                exit 1
            fi
        fi
        
        # Prettierフォーマットチェック（自動修正）
        echo "  ✨ Prettierフォーマット..."
        npx prettier --write $FILTERED_FILES 2>/dev/null
        git add $FILTERED_FILES
        
        # ESLintは最小限のチェックのみ（構文エラーのみ）
        if [ "$CHECK_ESLINT" = "1" ]; then
            echo "  📏 ESLint構文チェック..."
            npx eslint $FILTERED_FILES --quiet --no-eslintrc --rule 'no-syntax-error: error' 2>/dev/null || true
        fi
    else
        echo "ℹ️  チェック対象のファイルはありません（アーカイブ/テストファイルのみ）"
    fi
else
    echo "ℹ️  TypeScriptファイルの変更はありません。"
fi

# デフォルトではビルドチェックはスキップ（FORCE_BUILD_CHECK=1で有効化）
if [ "$FORCE_BUILD_CHECK" = "1" ] && [ -n "$FILTERED_FILES" ]; then
    echo "🏗️  ビルド可能性を確認中..."
    npm run build --silent > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "✅ ビルド成功"
    else
        echo "⚠️  ビルドエラーがあります"
        echo "💡 詳細: npm run build"
    fi
fi

echo "✅ Pre-commitチェックが完了しました！"